const { mainButtons } = require('../../Components/Buttons');
const { Status } = require('../../Components/Status');
const {
  saveProduct,
  updateProductTotalAmount,
  updateProductInfo,
  userProductsByUserTGId,
} = require('../../Storages/ProductStorage');
const { dateForErrorLog } = require('../../utils/formatDate');
const { sendMessageToUser } = require('../../utils/sendMessageToUser');

function containsOnlyNumbers(inputString) {
  return /^\d+(\.\d+)?$/.test(inputString) || /^\.\d+$/.test(inputString);
}
let states = {};
module.exports = (app, bot, logger) => {
  try {
    bot.on('text', async (msg) => {
      const { chat } = msg;

      const exitButton = '–í–∏–π—Ç–∏ –∑ –¥–æ–¥–∞–≤–∞–Ω–Ω—è';
      if (msg.text === exitButton) {
        delete states[msg.from.id];
        delete states[msg.from.id + `id`];
      }
      if (msg.text === 'üÜï –î–æ–±–∞–≤–∏—Ç—å –ø–æ—Å—ã–ª–∫—É' || msg.text === 'üÜï –î–æ–±–∞–≤–∏—Ç—å –µ—â–µ –æ–¥–Ω—É –ø–æ—Å—ã–ª–∫—É') {
        bot
          .sendMessage(
            msg.from.id,
            `
–í–≤–µ–¥–∏—Ç–µ —Ç—Ä–µ–∫-–Ω–æ–º–µ—Ä –≤–∞—à–µ–π –ø–æ—Å—ã–ª–∫–∏:

‚ÑπÔ∏è NP000000000000000NPG / CV00000000US / MYCV00000000DE (–ø—Ä–∏–º–µ—Ä —Ç—Ä–µ–∫ –Ω–æ–º–µ—Ä–æ–≤ NP Shopping, Meest)
            
        
–ò–Ω—Å—Ç—Ä—É–∫—Ü–∏—è –ø–æ —Ä–∞–±–æ—Ç–µ —Å –±–æ—Ç–æ–º
https://teletype.in/@usetname9472/ssbot
        

          `,
            {
              reply_to_message_id: msg.message_id,
              reply_markup: {
                force_reply: true,
                selective: true,
              },
            },
          )
          .then(() => {
            console.log(msg.from.id);
            states[msg.from.id] = 1;
          });
      }

      if (states[msg.from.id] == 1) {
        const result = await saveProduct({
          trackNumber: msg.text,
          userTGId: msg.from.id,
          userTGNick: msg.from.username,
        });

        if (result) {
          bot
            .sendMessage(
              msg.from.id,
              `
–í–≤–µ–¥–∏—Ç–µ –æ–±—â—É—é —Å—Ç–æ–∏–º–æ—Å—Ç—å –ø–æ—Å—ã–ª–∫–∏ –≤ $ (–¥–æ–ª–ª–∞—Ä–∞—Ö –°–®–ê):

‚ÑπÔ∏è –°—Ç–æ–∏–º–æ—Å—Ç—å –±–µ–∑ —É—á–µ—Ç–∞ –Ω–∞–ª–æ–≥–æ–≤ –∏ –¥–æ—Å—Ç–∞–≤–∫–∏
            
–ï—Å–ª–∏ —É –≤–∞—Å –≤ –∏–Ω–≤–æ–π—Å–µ —Ü–µ–Ω—ã –≤ –µ–≤—Ä–æ, —Ñ—É–Ω—Ç–∞—Ö –∏ —Ç–¥ - –ø–µ—Ä–µ–≤–µ–¥–∏—Ç–µ –æ–±—â—É—é —Å—Ç–æ–∏–º–æ—Å—Ç—å –≤ $, –∏—Å–ø–æ–ª—å–∑—É—è –∫–æ–Ω–≤–µ—Ä—Ç–µ—Ä 
https://minfin.com.ua/currency/converter/?from=eur&to=usd&val1=&val2=

–í–≤–µ–¥–∏—Ç–µ —Ç–æ–ª—å–∫–æ —á–∏—Å–ª–æ, –±–µ–∑ –±—É–∫–≤ –∏ –¥—Ä—É–≥–∏—Ö —Å–∏–º–≤–æ–ª–æ–≤
            `,
              {
                reply_to_message_id: msg.message_id,
                reply_markup: {
                  force_reply: true,
                  selective: true,
                },
              },
            )
            .then(() => {
              states[msg.from.id] = 2;
              states[msg.from.id + `id`] = result._id.toString();
            });
        } else {
          logger.error(
            `${dateForErrorLog()} -- Error save to DB user id: ${msg.from.id} username: ${
              msg.from.username
            }`,
          );
          bot.sendMessage(msg.from.id, '–ü–æ–º–∏–ª–∫–∞ —Å–µ–π–≤—É –¥–æ –î–ë, —Å–ø—Ä–æ–±—É–π—Ç–µ –ø—ñ–∑–Ω—ñ—à–µ: ');
          delete states[msg.from.id];
          delete states[msg.from.id + `id`];
        }
      }
      if (states[msg.from.id] == 2) {
        if (!containsOnlyNumbers(msg.text)) {
          bot.sendMessage(
            msg.from.id,
            `
–í–≤–µ–¥–∏—Ç–µ –æ–±—â—É—é —Å—Ç–æ–∏–º–æ—Å—Ç—å –ø–æ—Å—ã–ª–∫–∏ –≤ $ (–¥–æ–ª–ª–∞—Ä–∞—Ö –°–®–ê):

‚ÑπÔ∏è –°—Ç–æ–∏–º–æ—Å—Ç—å –±–µ–∑ —É—á–µ—Ç–∞ –Ω–∞–ª–æ–≥–æ–≤ –∏ –¥–æ—Å—Ç–∞–≤–∫–∏
                      
–ï—Å–ª–∏ —É –≤–∞—Å –≤ –∏–Ω–≤–æ–π—Å–µ —Ü–µ–Ω—ã –≤ –µ–≤—Ä–æ, —Ñ—É–Ω—Ç–∞—Ö –∏ —Ç–¥ - –ø–µ—Ä–µ–≤–µ–¥–∏—Ç–µ –æ–±—â—É—é —Å—Ç–æ–∏–º–æ—Å—Ç—å –≤ $, –∏—Å–ø–æ–ª—å–∑—É—è –∫–æ–Ω–≤–µ—Ä—Ç–µ—Ä 
https://minfin.com.ua/currency/converter/?from=eur&to=usd&val1=&val2=
          
–í–≤–µ–¥–∏—Ç–µ —Ç–æ–ª—å–∫–æ —á–∏—Å–ª–æ, –±–µ–∑ –±—É–∫–≤ –∏ –¥—Ä—É–≥–∏—Ö —Å–∏–º–≤–æ–ª–æ–≤`,
          );
          return;
        }
        const result = await updateProductTotalAmount({
          _id: states[msg.from.id + `id`],
          totalAmount: msg.text,
        });
        if (result) {
          bot
            .sendMessage(
              msg.from.id,
              `
–í–≤–µ–¥–∏—Ç–µ –∏–Ω—Ñ–æ—Ä–º–∞—Ü–∏—é –æ —Ñ–∞–∫—Ç–∏—á–µ—Å–∫–æ–º —Å–æ–¥–µ—Ä–∂–∏–º–æ–º –ø–æ—Å—ã–ª–∫–∏ –∏ –ø–æ–ª—É—á–∞—Ç–µ–ª–µ:
‚ÑπÔ∏è –§–æ—Ä–º–∞ –¥–æ–±–∞–≤–ª–µ–Ω–∏—è –∏–Ω—Ñ–æ—Ä–º–∞—Ü–∏–∏ –≤ –ø—Ä–∞–≤–∏–ª–∞—Ö 

–ü—Ä–∞–≤–∏–ª–∞ –°–µ—Ä–≤–∏—Å–∞
https://teletype.in/@usetname9472/rules`,
              {
                reply_to_message_id: msg.message_id,
                reply_markup: {
                  force_reply: true,
                  selective: true,
                },
              },
            )
            .then(() => {
              states[msg.from.id] = 3;
            });
        } else {
          logger.error(
            `${dateForErrorLog()} -- Error update amount to DB user id: ${msg.from.id} username: ${
              msg.from.username
            }`,
          );
          bot.sendMessage(msg.from.id, '–ü–æ–º–∏–ª–∫–∞ —Å–µ–π–≤—É –¥–æ –î–ë, —Å–ø—Ä–æ–±—É–π—Ç–µ –ø—ñ–∑–Ω—ñ—à–µ: ');
          delete states[msg.from.id];
          delete states[msg.from.id + `id`];
        }
      }
      if (states[msg.from.id] == 3) {
        const result = await updateProductInfo({
          _id: states[msg.from.id + `id`],
          info: msg.text,
        });
        if (result) {
          bot
            .sendMessage(
              msg.from.id,
              `
‚òëÔ∏è –ü–æ—Å—ã–ª–∫–∞ –¥–æ–±–∞–≤–ª–µ–Ω–∞! 
–ü–æ—Å–ª–µ –ø—Ä–æ–≤–µ—Ä–∫–∏ —Å–∞–ø–ø–æ—Ä—Ç–æ–º, –≤–∞–º –≤—ã—à–ª—é—Ç —Å—É–º–º—É –∫ –æ–ø–ª–∞—Ç–µ –∏ —Ä–µ–∫–≤–∏–∑–∏—Ç—ã!
            `,
              {
                reply_to_message_id: msg.message_id,
                reply_markup: {
                  keyboard: [['üÜï –î–æ–±–∞–≤–∏—Ç—å –µ—â–µ –æ–¥–Ω—É –ø–æ—Å—ã–ª–∫—É', '‚Ü©Ô∏è –í–µ—Ä–Ω—É—Ç—å—Å—è –Ω–∞–∑–∞–¥']],
                  resize_keyboard: true,
                },
              },
            )
            .then(() => {
              delete states[msg.from.id];
              delete states[msg.from.id + `id`];
            });
        } else {
          logger.error(
            `${dateForErrorLog()} -- Error update info to DB user id: ${msg.from.id} username: ${
              msg.from.username
            }`,
          );
          bot.sendMessage(msg.from.id, '–ü–æ–º–∏–ª–∫–∞ —Å–µ–π–≤—É –¥–æ –î–ë, —Å–ø—Ä–æ–±—É–π—Ç–µ –ø—ñ–∑–Ω—ñ—à–µ: ');
          delete states[msg.from.id];
          delete states[msg.from.id + `id`];
        }
      }

      if (msg.text === '‚Ü©Ô∏è –í–µ—Ä–Ω—É—Ç—å—Å—è –Ω–∞–∑–∞–¥') {
        await sendMessageToUser({
          bot,
          userId: msg.chat.id,
          message: `
‚ùóÔ∏è–ß—Ç–æ–±—ã –¥–æ–±–∞–≤–∏—Ç—å –ø–æ—Å—ã–ª–∫—É –≤—ã–ø–æ–ª–Ω—è–π—Ç–µ –∏–Ω—Å—Ç—Ä—É–∫—Ü–∏–∏
https://teletype.in/@usetname9472/rules123
          
üì© –ü–æ –ª—é–±–∏–º –≤–æ–ø—Ä–æ—Å–∞–º –ø–∏—à–∏—Ç–µ @staffship
          `,
          options: {
            reply_markup: {
              keyboard: mainButtons,
              resize_keyboard: true,
            },
          },
        });
      }

      if (msg.text === 'üì¶ –ú–æ–∏ –ø–æ—Å—ã–ª–∫–∏') {
        const userTGId = msg.from.id;
        if (!userTGId) return;
        const products = await userProductsByUserTGId({ userTGId });
        if (!products) {
          await bot.sendMessage(userTGId, '–ü—É—Å—Ç–æ');
          return;
        }
        const formattedProducts = products
          .filter((item) => item.status !== Status.Archive)
          .map((product) => {
            return `Track Number: ${product.trackNumber}\nStatus: ${product.status}\n`;
          });
        const messageText = formattedProducts.join('\n');
        await bot.sendMessage(userTGId, messageText);
      }

      if (msg.text === 'üí∞ –¢–∞—Ä–∏—Ñ—ã') {
        await bot.sendMessage(
          chat.id,
          `
–ê–∫—Ç—É–∞–ª—å–Ω—ã–π —Å–ø–∏—Å–æ–∫ –ø–µ—Ä–µ—Å—ã–ª–æ–≤ –∏ –ø–æ—á—Ç–æ–≤—ã—Ö —Å–ª—É–∂–±, –ø–æ –∫–æ—Ç–æ—Ä—ã–º –º–æ–∂–µ–º –ø–æ–º–æ—á—å:
üü¢ Meest, NP Shopping, DHL Express, EMS, –£–∫—Ä–ø–æ—á—Ç–∞
          
‚óæÔ∏è Meest
‚ùóÔ∏è –°–®–ê, –ï–≤—Ä–æ–ø–∞, –ö–∏—Ç–∞–π - –ª—é–±—ã–µ —Å—Ç—Ä–∞–Ω—ã-–æ—Ç–ø—Ä–∞–≤–∏—Ç–µ–ª–∏
–¢–∞—Ä–∏—Ñ—ã –ú–∏—Å—Ç:
          
15 % –æ—Ç —Ñ–∞–∫—Ç–∏—á–µ—Å–∫–æ–π —Å—Ç–æ–∏–º–æ—Å—Ç–∏ –ø–æ—Å—ã–ª–∫–∏
14 % - –µ—Å–ª–∏ –æ–±—ä–µ–º –≤–∞—à–∏—Ö –ø–æ—Å—ã–ª–æ–∫ >= 50–∫ $
20 % - –∑–∞—Å—Ç—Ä—è–≤—à–∏–µ –ø–æ—Å—ã–ª–∫–∏ –Ω–∞ —Ç–∞–º–æ–∂–Ω–µ , –ø–æ –Ω–∏–º –≥–∞—Ä–∞–Ω—Ç–∏–∏ –Ω–µ—Ç, —Ç–∞–∫ –∫–∞–∫ –µ—Å—Ç—å –Ω—é–∞–Ω—Å—ã , –∫–∞–∂–¥–∞—è —Ç–∞–∫–∞—è –ø–æ—Å—ã–ª–∫–∞ —Ä–∞—Å—Å–º–∞—Ç—Ä–∏–≤–∞–µ—Ç—Å—è –∏–Ω–¥–∏–≤–∏–¥—É–∞–ª—å–Ω–æ, –µ—Å–ª–∏ –Ω–µ –ø–æ–ª—É—á–∞–µ—Ç—Å—è, —Ç–æ –¥–µ–ª–∞–µ–º –≤–æ–∑–≤—Ä–∞—Ç.
‚óæÔ∏è NP Shopping, DHL Express, EMS, –£–∫—Ä–ø–æ—á—Ç–∞
‚ùóÔ∏è NP Shopping - –±–µ—Ä–µ–º –≤ —Ä–∞–±–æ—Ç—É —Ç–æ–ª—å–∫–æ –ø–æ—Å—ã–ª–∫–∏ –∏–∑ –°–®–ê, —Ç–∞–∫ –∫–∞–∫ –ø–æ—Å—ã–ª–∫–∏ —Å –ï–≤—Ä–æ–ø—ã –ø–æ–ø–∞–¥–∞—é—Ç –≤–æ –õ—å–≤–æ–≤, —Ç–∞–º –º—ã –ø–æ–º–æ—á—å –Ω–µ —Å–º–æ–∂–µ–º, –ø–æ —ç—Ç–æ–º—É —Ä–µ–∫–æ–º–µ–Ω–¥—É–µ–º –æ—Ç—Ä–∞–≤–ª—è—Ç—å –ø–æ—Å—ã–ª–∫–∏ —Å –ï–≤—Ä–æ–ø—ã —á–µ—Ä–µ–∑ Meest
          
10 % –æ—Ç —Ñ–∞–∫—Ç–∏—á–µ—Å–∫–æ–π —Å—Ç–æ–∏–º–æ—Å—Ç–∏ –ø–æ—Å—ã–ª–∫–∏
9 % - –µ—Å–ª–∏ –æ–±—å–µ–º –≤–∞—à–∏—Ö –ø–æ—Å—ã–ª–æ–∫ >= 50–∫ $
20 % - –∑–∞—Å—Ç—Ä—è–≤—à–∏–µ –ø–æ—Å—ã–ª–∫–∏ –Ω–∞ —Ç–∞–º–æ–∂–Ω–µ , –ø–æ –Ω–∏–º –≥–∞—Ä–∞–Ω—Ç–∏–∏ –Ω–µ—Ç, —Ç–∞–∫ –∫–∞–∫ –µ—Å—Ç—å –Ω—é–∞–Ω—Å—ã , –∫–∞–∂–¥–∞—è —Ç–∞–∫–∞—è –ø–æ—Å—ã–ª–∫–∞ —Ä–∞—Å—Å–º–∞—Ç—Ä–∏–≤–∞–µ—Ç—Å—è –∏–Ω–¥–∏–≤–∏–¥—É–∞–ª—å–Ω–æ, –µ—Å–ª–∏ –Ω–µ –ø–æ–ª—É—á–∞–µ—Ç—Å—è, —Ç–æ –¥–µ–ª–∞–µ–º –≤–æ–∑–≤—Ä–∞—Ç.
‚ùóÔ∏è –ú–∏–Ω–∏–º–∞–ª—å–Ω–∞—è —Å—Ç–æ–∏–º–æ—Å—Ç—å –ø–æ—Å—ã–ª–æ–∫, –∫–æ—Ç–æ—Ä—ã–µ –±–µ—Ä–µ–º –≤ —Ä–∞–±–æ—Ç—É - 200$
          
‚õîÔ∏è –°–∫–ª–∞–¥—á–∏–Ω—ã, –ø–µ—Ä–µ–ø—Ä–æ–¥–∞–∂–∞ —É—Å–ª—É–≥ - –ó–ê–ü–†–ï–©–ï–ù–´
          
üì© –ü–æ –ª—é–±–∏–º –≤–æ–ø—Ä–æ—Å–∞–º –ø–∏—à–∏—Ç–µ @staffship`,
          {
            parse_mode: 'HTML',
          },
        );
      }
      if (msg.text === 'üìù –ü—Ä–∞–≤–∏–ª–∞') {
        await bot.sendMessage(
          chat.id,
          `
–≠—Ç–æ –æ—Å–Ω–æ–≤–Ω—ã–µ –ø—Ä–∞–≤–∏–ª–∏ —Ä–∞–±–æ—Ç—ã –Ω–∞—à–µ–≥–æ —Å–µ—Ä–≤–∏—Å–∞!
–ó–¥–µ—Å—å –æ–ø–∏—Å–∞–Ω—ã –ø—Ä–∏–Ω—Ü–∏–ø—ã —Ä–∞–±–æ—Ç—ã, —Ç–∞—Ä–∏—Ñ—ã, –ø—Ä–∞–≤–∏–ª–∞ –¥–µ–∫–ª–∞—Ä–∏—Ä–æ–≤–∞–Ω–∏—è –ø–æ—Å—ã–ª–æ–∫ –≤ –∫–∞–±–∏–Ω–µ—Ç–∞—Ö –ø–æ—á—Ç–æ–≤—ã—Ö —Å–ª—É–∂–±, –ø–æ —ç—Ç–æ–º—É –ø–µ—Ä–µ–¥ —Ç–µ–º –∫–∞–∫ –∑–∞–¥–∞–≤–∞—Ç—å –≤–æ–ø—Ä–æ—Å—ã - –≤–Ω–∏–º–∞—Ç–µ–ª—å–Ω–æ –∏—Ö –ø—Ä–æ—á—Ç–∏—Ç–µ!

‚ùóÔ∏è  –ù–∞–ø–æ–º–∏–Ω–∞–µ–º, —á—Ç–æ –ø—Ä–æ–ø—É—Å–∫–∞—Ç—å –ø–æ—Å—ã–ª–∫–∏ —Å—Ç–∞–Ω–æ–≤–∏—Ç—å—Å—è –≤—Å–µ —Å–ª–æ–∂–Ω–µ–µ, –ø–æ —ç—Ç–æ–º—É –Ω—É–∂–Ω–æ —á–µ—Ç–∫–æ –∏ –≤–æ–≤—Ä–µ–º—è –≤—ã–ø–æ–ª–Ω—è—Ç—å  –∏–Ω—Å—Ç—Ä—É–∫—Ü–∏–∏, –∞ –∏–º–µ–Ω–Ω–æ:
- –¥–µ–∫–ª–∞—Ä–∏—Ä–æ–≤–∞—Ç—å —Å—Ç—Ä–æ–≥–æ –∫–∞–∫ —É–∫–∞–∑–∞–Ω–æ —É –Ω–∞—Å –≤ –ø—Ä–∞–≤–∏–ª–∞—Ö, –æ—Å–æ–±–µ–Ω–Ω–æ —ç—Ç–æ –∫–∞—Å–∞–µ—Ç—Å—è –Ω–∞–∑–≤–∞–Ω–∏—è –∏ —Å—Ç–æ–∏–º–æ—Å—Ç–∏!
–∑–∞—Ä–∞–Ω–µ–µ –±—Ä–æ—Å–∞—Ç—å –∏–Ω—Ñ–æ—Ä–º–∞—Ü–∏—é –æ –ø–æ—Å—ã–ª–∫–µ - –∫–∞–∫ —Ç–æ–ª—å–∫–æ –ø—Ä–∏—Å–≤–æ–∏–ª–∏ —Ç—Ä–µ–∫-–Ω–æ–º–µ—Ä –æ—Ç–¥–∞–≤–∞–π—Ç–µ –≤ —Ä–∞–±–æ—Ç—É!

‚óæÔ∏è  –ü—Ä–∞–≤–∏–ª–∞ –°–µ—Ä–≤–∏—Å–∞ 
https://teletype.in/@usetname9472/rules123

‚óæÔ∏è  –ü—Ä–∞–≤–∏–ª–∞ –¥–æ–±–∞–≤–ª–µ–Ω–∏—è –ø–æ—Å—ã–ª–æ–∫ —á–µ—Ä–µ–∑ –±–æ—Ç
https://teletype.in/@usetname9472/rules123 
 
üì© –ü–æ –ª—é–±–∏–º –≤–æ–ø—Ä–æ—Å–∞–º –ø–∏—à–∏—Ç–µ @staffship`,
          {
            parse_mode: 'HTML',
          },
        );
      }
      if (msg.text === 'üì© –ù–∞–ø–∏—Å–∞—Ç—å –Ω–∞–º') {
        await bot.sendMessage(
          chat.id,
          `üì© –ü–æ –≤—Å–µ–º –∏–Ω—Ç–µ—Ä–µ—Å—É—é—â–∏–º –≤–æ–ø—Ä–æ—Å–∞–º –ø–∏—à–∏—Ç–µ —Å–∞–ø–ø–æ—Ä—Ç—É
@staffship`,
          {
            parse_mode: 'HTML',
          },
        );
      }
      if (msg.text === 'üì∞ –ö–∞–Ω–∞–ª') {
        await bot.sendMessage(
          chat.id,
          `üì∞ –ü–æ—Å–¥–ø–∏—Å—ã–≤–∞–π—Ç–µ—Å—å –Ω–∞ –Ω–∞—à –∫–∞–Ω–∞–ª, —á—Ç–æ–±—ã –±—ã—Ç—å –≤—Å–µ–≥–¥–∞ –≤ –∫—É—Ä—Å–µ –∏–∑–º–µ–Ω–µ–Ω–∏–π –≤ —Ä–∞–±–æ—Ç–µ —Å–µ—Ä–≤–∏—Å–∞
 @staffship`,
          {
            parse_mode: 'HTML',
          },
        );
      }
      if (msg.text == '‚ùå –ó–∞–∫—Ä—ã—Ç—å –º–µ–Ω—é') {
        await bot.sendMessage(chat.id, '–ú–µ–Ω—é –∑–∞–∫—Ä—ã—Ç–æ', {
          reply_markup: {
            remove_keyboard: true,
          },
        });
      }
      if (msg.text == '–ù–∞ –≥–ª–∞–≤–Ω—É—é') {
        await bot.sendMessage(chat.id, '–ù–∞ –≥–ª–∞–≤–Ω—É—é', {
          reply_markup: {
            keyboard: mainButtons,
            resize_keyboard: true,
          },
        });
      }
    });
  } catch (e) {
    logger.error(`${dateForErrorLog()} -- Button controller error`);
    console.log('Button controller error');
  }
};
